<?php
// Include the database connection file to establish database connectivity
require_once 'db_connect.php';

// Check if user is logged in by verifying session variables
if (!isset($_SESSION["loggedin"]) || $_SESSION["loggedin"] !== true) {
    // If not logged in, redirect to login page
    header("Location: ../index.php");
    // Terminate script execution
    exit;
}

// Process medication actions - this is the main controller for all medication-related operations
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if the action is to add a new medication
    if (isset($_POST["action"]) && $_POST["action"] == "add") {
        // Get form data for the new medication
        $name = $_POST["name"];                    // Get the medication name from form
        $dosage = $_POST["dosage"];                // Get the dosage information
        $frequency = $_POST["frequency"];          // Get how often the medication should be taken
        $start_date = $_POST["start_date"];        // Get when to start taking the medication
        $end_date = !empty($_POST["end_date"]) ? $_POST["end_date"] : null;  // Get optional end date, set to null if empty
        $instructions = $_POST["instructions"];     // Get any special instructions
        $remaining = !empty($_POST["remaining"]) ? $_POST["remaining"] : null;  // Get optional pill count, set to null if empty
        $refill_reminder = isset($_POST["refill_reminder"]) ? 1 : 0;  // Check if refill reminders are enabled
        $refill_reminder_threshold = !empty($_POST["refill_reminder_threshold"]) ? $_POST["refill_reminder_threshold"] : 5;  // Get threshold for refill reminders
        $user_id = $_SESSION["id"];                // Get the user ID from the session
        
        // Validate form data to ensure required fields are filled
        if (empty($name) || empty($dosage) || empty($frequency) || empty($start_date)) {
            // If validation fails, redirect back to form with error message
            header("Location: ../medications.php?add=1&error=Please fill in all required fields");
            // Terminate script execution
            exit;
        }
        
        // Prepare SQL statement to insert new medication
        $sql = "INSERT INTO medications (user_id, name, dosage, frequency, start_date, end_date, instructions, remaining, refill_reminder, refill_reminder_threshold) 
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        // Create a prepared statement to prevent SQL injection
        $stmt = $conn->prepare($sql);
        // Bind parameters to the prepared statement with appropriate types
        $stmt->bind_param("issssssiis", $user_id, $name, $dosage, $frequency, $start_date, $end_date, $instructions, $remaining, $refill_reminder, $refill_reminder_threshold);
        
        // Execute the statement and check for success
        if ($stmt->execute()) {
            // If successful, redirect with success message
            header("Location: ../medications.php?success=Medication added successfully");
        } else {
            // If failed, redirect with error message
            header("Location: ../medications.php?add=1&error=Something went wrong");
        }
    }
    // Check if the action is to update an existing medication
    else if (isset($_POST["action"]) && $_POST["action"] == "update") {
        // Get form data for the medication update
        $id = $_POST["id"];                        // Get the medication ID to update
        $name = $_POST["name"];                    // Get the updated medication name
        $dosage = $_POST["dosage"];                // Get the updated dosage
        $frequency = $_POST["frequency"];          // Get the updated frequency
        $start_date = $_POST["start_date"];        // Get the updated start date
        $end_date = !empty($_POST["end_date"]) ? $_POST["end_date"] : null;  // Get optional updated end date
        $instructions = $_POST["instructions"];     // Get updated instructions
        $remaining = !empty($_POST["remaining"]) ? $_POST["remaining"] : null;  // Get updated pill count
        $refill_reminder = isset($_POST["refill_reminder"]) ? 1 : 0;  // Check if refill reminders should be enabled
        $refill_reminder_threshold = !empty($_POST["refill_reminder_threshold"]) ? $_POST["refill_reminder_threshold"] : 5;  // Get updated threshold
        $user_id = $_SESSION["id"];                // Get the user ID from the session
        
        // Validate form data to ensure required fields are filled
        if (empty($name) || empty($dosage) || empty($frequency) || empty($start_date)) {
            // If validation fails, redirect back to form with error message
            header("Location: ../medications.php?edit=$id&error=Please fill in all required fields");
            // Terminate script execution
            exit;
        }
        
        // Security check: Verify that the medication belongs to the logged-in user
        $check_sql = "SELECT id FROM medications WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the security check
        $check_stmt = $conn->prepare($check_sql);
        // Bind the medication ID and user ID parameters
        $check_stmt->bind_param("ii", $id, $user_id);
        // Execute the security check
        $check_stmt->execute();
        // Get the result of the security check
        $check_result = $check_stmt->get_result();
        
        // If no matching record found, this is an unauthorized attempt
        if ($check_result->num_rows == 0) {
            // Redirect with unauthorized access error
            header("Location: ../medications.php?error=Unauthorized access");
            // Terminate script execution
            exit;
        }
        
        // Prepare SQL statement to update the medication
        $sql = "UPDATE medications SET name = ?, dosage = ?, frequency = ?, start_date = ?, end_date = ?, 
                instructions = ?, remaining = ?, refill_reminder = ?, refill_reminder_threshold = ? 
                WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the update
        $stmt = $conn->prepare($sql);
        // Bind parameters to the prepared statement
        $stmt->bind_param("ssssssiisii", $name, $dosage, $frequency, $start_date, $end_date, $instructions, 
                         $remaining, $refill_reminder, $refill_reminder_threshold, $id, $user_id);
        
        // Execute the update and check for success
        if ($stmt->execute()) {
            // If successful, redirect with success message
            header("Location: ../medications.php?success=Medication updated successfully");
        } else {
            // If failed, redirect with error message
            header("Location: ../medications.php?edit=$id&error=Something went wrong");
        }
    }
    // Check if the action is to update remaining pill count
    else if (isset($_POST["action"]) && $_POST["action"] == "update_remaining") {
        // Get the medication ID and remaining pill count
        $id = $_POST["id"];                    // Get the medication ID
        $remaining = $_POST["remaining"];      // Get the updated pill count
        $user_id = $_SESSION["id"];            // Get the user ID from the session
        
        // Security check: Verify that the medication belongs to the logged-in user
        $check_sql = "SELECT id FROM medications WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the security check
        $check_stmt = $conn->prepare($check_sql);
        // Bind the medication ID and user ID parameters
        $check_stmt->bind_param("ii", $id, $user_id);
        // Execute the security check
        $check_stmt->execute();
        // Get the result of the security check
        $check_result = $check_stmt->get_result();
        
        // If no matching record found, this is an unauthorized attempt
        if ($check_result->num_rows == 0) {
            // Redirect with unauthorized access error
            header("Location: ../medications.php?error=Unauthorized access");
            // Terminate script execution
            exit;
        }
        
        // Prepare SQL statement to update just the remaining pill count
        $sql = "UPDATE medications SET remaining = ? WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the update
        $stmt = $conn->prepare($sql);
        // Bind parameters to the prepared statement
        $stmt->bind_param("iii", $remaining, $id, $user_id);
        
        // Execute the update and check for success
        if ($stmt->execute()) {
            // If successful, redirect to medication view with success message
            header("Location: ../medications.php?view=$id&success=Medication supply updated");
        } else {
            // If failed, redirect with error message
            header("Location: ../medications.php?view=$id&error=Something went wrong");
        }
    }
    // Check if the action is to log a medication dose
    else if (isset($_POST["action"]) && $_POST["action"] == "log_dose") {
        // Get the medication ID, timestamp, and optional notes
        $medication_id = $_POST["medication_id"];   // Get the medication ID
        $taken_at = $_POST["taken_at"];            // Get when the medication was taken
        $notes = isset($_POST["notes"]) ? $_POST["notes"] : "";  // Get optional notes
        $user_id = $_SESSION["id"];                // Get the user ID from the session
        
        // Security check: Verify that the medication belongs to the logged-in user
        $check_sql = "SELECT id, remaining FROM medications WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the security check
        $check_stmt = $conn->prepare($check_sql);
        // Bind the medication ID and user ID parameters
        $check_stmt->bind_param("ii", $medication_id, $user_id);
        // Execute the security check
        $check_stmt->execute();
        // Get the result of the security check
        $check_result = $check_stmt->get_result();
        
        // If no matching record found, this is an unauthorized attempt
        if ($check_result->num_rows == 0) {
            // Redirect with unauthorized access error
            header("Location: ../medications.php?error=Unauthorized access");
            // Terminate script execution
            exit;
        }
        
        // Get the medication information to update remaining pill count
        $medication = $check_result->fetch_assoc();
        
        // Prepare SQL statement to insert a new log entry
        $log_sql = "INSERT INTO medication_logs (medication_id, user_id, taken_at, notes) VALUES (?, ?, ?, ?)";
        // Create a prepared statement for the insertion
        $log_stmt = $conn->prepare($log_sql);
        // Bind parameters to the prepared statement
        $log_stmt->bind_param("iiss", $medication_id, $user_id, $taken_at, $notes);
        
        // Execute the log insertion and check for success
        if ($log_stmt->execute()) {
            // If the medication has a remaining pill count, decrement it
            if ($medication["remaining"] !== null) {
                // Calculate new remaining pill count, ensuring it doesn't go below zero
                $new_remaining = max(0, $medication["remaining"] - 1);
                // Prepare SQL statement to update the remaining count
                $update_sql = "UPDATE medications SET remaining = ? WHERE id = ?";
                // Create a prepared statement for the update
                $update_stmt = $conn->prepare($update_sql);
                // Bind parameters to the prepared statement
                $update_stmt->bind_param("ii", $new_remaining, $medication_id);
                // Execute the update
                $update_stmt->execute();
            }
            
            // Redirect to medication view with success message
            header("Location: ../medications.php?view=$medication_id&success=Dose logged successfully");
        } else {
            // If failed, redirect with error message
            header("Location: ../medications.php?view=$medication_id&error=Something went wrong");
        }
    }
    // Check if the action is to quick log a dose (log immediately with current time)
    else if (isset($_POST["action"]) && $_POST["action"] == "quick_log") {
        // Get the medication ID and use current timestamp
        $medication_id = $_POST["medication_id"];   // Get the medication ID
        $taken_at = date("Y-m-d H:i:s");          // Use current date and time
        $user_id = $_SESSION["id"];                // Get the user ID from the session
        
        // Security check: Verify that the medication belongs to the logged-in user
        $check_sql = "SELECT id, remaining FROM medications WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the security check
        $check_stmt = $conn->prepare($check_sql);
        // Bind the medication ID and user ID parameters
        $check_stmt->bind_param("ii", $medication_id, $user_id);
        // Execute the security check
        $check_stmt->execute();
        // Get the result of the security check
        $check_result = $check_stmt->get_result();
        
        // If no matching record found, this is an unauthorized attempt
        if ($check_result->num_rows == 0) {
            // Redirect with unauthorized access error
            header("Location: ../medications.php?error=Unauthorized access");
            // Terminate script execution
            exit;
        }
        
        // Get the medication information to update remaining pill count
        $medication = $check_result->fetch_assoc();
        
        // Prepare SQL statement to insert a new log entry with 'Quick logged' note
        $log_sql = "INSERT INTO medication_logs (medication_id, user_id, taken_at, notes) VALUES (?, ?, ?, 'Quick logged')";
        // Create a prepared statement for the insertion
        $log_stmt = $conn->prepare($log_sql);
        // Bind parameters to the prepared statement
        $log_stmt->bind_param("iis", $medication_id, $user_id, $taken_at);
        
        // Execute the log insertion and check for success
        if ($log_stmt->execute()) {
            // If the medication has a remaining pill count, decrement it
            if ($medication["remaining"] !== null) {
                // Calculate new remaining pill count, ensuring it doesn't go below zero
                $new_remaining = max(0, $medication["remaining"] - 1);
                // Prepare SQL statement to update the remaining count
                $update_sql = "UPDATE medications SET remaining = ? WHERE id = ?";
                // Create a prepared statement for the update
                $update_stmt = $conn->prepare($update_sql);
                // Bind parameters to the prepared statement
                $update_stmt->bind_param("ii", $new_remaining, $medication_id);
                // Execute the update
                $update_stmt->execute();
            }
            
            // Redirect to medications page with success message
            header("Location: ../medications.php?success=Dose logged successfully");
        } else {
            // If failed, redirect with error message
            header("Location: ../medications.php?error=Something went wrong");
        }
    }
} 
// Handle GET requests (for delete operations)
else if ($_SERVER["REQUEST_METHOD"] == "GET") {
    // Check if the action is to delete a medication
    if (isset($_GET["action"]) && $_GET["action"] == "delete" && isset($_GET["id"])) {
        // Get the medication ID
        $id = $_GET["id"];                    // Get the medication ID
        $user_id = $_SESSION["id"];            // Get the user ID from the session
        
        // Security check: Verify that the medication belongs to the logged-in user
        $check_sql = "SELECT id FROM medications WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the security check
        $check_stmt = $conn->prepare($check_sql);
        // Bind the medication ID and user ID parameters
        $check_stmt->bind_param("ii", $id, $user_id);
        // Execute the security check
        $check_stmt->execute();
        // Get the result of the security check
        $check_result = $check_stmt->get_result();
        
        // If no matching record found, this is an unauthorized attempt
        if ($check_result->num_rows == 0) {
            // Redirect with unauthorized access error
            header("Location: ../medications.php?error=Unauthorized access");
            // Terminate script execution
            exit;
        }
        
        // Delete all associated logs first to maintain referential integrity
        $logs_sql = "DELETE FROM medication_logs WHERE medication_id = ?";
        // Create a prepared statement for the log deletion
        $logs_stmt = $conn->prepare($logs_sql);
        // Bind the medication ID parameter
        $logs_stmt->bind_param("i", $id);
        // Execute the log deletion
        $logs_stmt->execute();
        
        // Prepare SQL statement to delete the medication
        $sql = "DELETE FROM medications WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the deletion
        $stmt = $conn->prepare($sql);
        // Bind parameters to the prepared statement
        $stmt->bind_param("ii", $id, $user_id);
        
        // Execute the deletion and check for success
        if ($stmt->execute()) {
            // If successful, redirect with success message
            header("Location: ../medications.php?success=Medication deleted successfully");
        } else {
            // If failed, redirect with error message
            header("Location: ../medications.php?error=Something went wrong");
        }
    }
    // Check if the action is to delete a medication log entry
    else if (isset($_GET["action"]) && $_GET["action"] == "delete_log" && isset($_GET["id"])) {
        // Get the log ID and optional medication ID for redirect
        $log_id = $_GET["id"];                    // Get the log ID
        $user_id = $_SESSION["id"];                // Get the user ID from the session
        $medication_id = isset($_GET["medication_id"]) ? $_GET["medication_id"] : null;  // Get optional medication ID for redirect
        
        // Security check: Verify that the log belongs to the logged-in user
        $check_sql = "SELECT id FROM medication_logs WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the security check
        $check_stmt = $conn->prepare($check_sql);
        // Bind the log ID and user ID parameters
        $check_stmt->bind_param("ii", $log_id, $user_id);
        // Execute the security check
        $check_stmt->execute();
        // Get the result of the security check
        $check_result = $check_stmt->get_result();
        
        // If no matching record found, this is an unauthorized attempt
        if ($check_result->num_rows == 0) {
            // Redirect with unauthorized access error
            header("Location: ../medications.php?error=Unauthorized access");
            // Terminate script execution
            exit;
        }
        
        // Prepare SQL statement to delete the log entry
        $sql = "DELETE FROM medication_logs WHERE id = ? AND user_id = ?";
        // Create a prepared statement for the deletion
        $stmt = $conn->prepare($sql);
        // Bind parameters to the prepared statement
        $stmt->bind_param("ii", $log_id, $user_id);
        
        // Execute the deletion and check for success
        if ($stmt->execute()) {
            // If medication ID is provided, redirect to medication view
            if ($medication_id) {
                header("Location: ../medications.php?view=$medication_id&success=Log entry deleted successfully");
            } else {
                // Otherwise, redirect to medications page
                header("Location: ../medications.php?success=Log entry deleted successfully");
            }
        } else {
            // If failed, redirect with error message
            if ($medication_id) {
                header("Location: ../medications.php?view=$medication_id&error=Something went wrong");
            } else {
                header("Location: ../medications.php?error=Something went wrong");
            }
        }
    }
} else {
    // Handle invalid requests by redirecting to medications page
    header("Location: ../medications.php");
}

// Close the database connection to free resources
$conn->close();
?>
